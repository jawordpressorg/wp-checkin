name: Deploy Plugin

on:
  release:
    types: [published]

jobs:

  release:
    name: Deploy Production Server
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://wp-checkin.com
    steps:
      - name: Checkout Code
        uses: actions/checkout@main

      - name: Setup PHP with composer v2
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          tools: composer
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Build Plugin
        run: |
          composer install --no-dev --no-interaction --no-progress --optimize-autoloader --prefer-dist
          npm install
          npm run build

      - name: Generate readme.txt
        uses: tarosky/workflows/actions/wp-readme@main

      - name: Versioning
        uses: tarosky/workflows/actions/versioning@main
        with:
          version: ${{ github.event.release.tag_name }}
          files: wp-checkin.php, readme.txt

      - name: Deploy to Production Server
        id: deployproduction
        uses: Pendect/action-rsyncer@v1.1.0
        env:
          DEPLOY_KEY: ${{secrets.DEPLOY_RSA_KEY}}
        with:
          flags: '-rptv --checksum --delete'
          options: '--exclude-from=.distignore'
          ssh_options: '-p 2222'
          src: './'
          dest: "${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/home/users/2/${{ secrets.DEPLOY_USER }}/web/wp-checkin/wp-content/plugins/${{ github.event.repository.name }}/"

      - name: Display Deploy Status
        run: echo "${{ matrix.site }} - ${{ steps.deployproduction.outputs.status }}"

      - name: Clean Package
        uses: tarosky/workflows/actions/distignore@main

      - name: Zip Archive
        run: |
          mkdir ${{ github.event.repository.name }}
          rsync -av --exclude=${{ github.event.repository.name }} --exclude=.git ./ ./${{ github.event.repository.name }}/
          zip -r ./${{ github.event.repository.name }}.zip ./${{ github.event.repository.name }}

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ github.event.repository.name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
